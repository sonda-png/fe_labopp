/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PublicTestIndexRouteImport } from './routes/_public/test/index'
import { Route as PublicNotFoundIndexRouteImport } from './routes/_public/not-found/index'
import { Route as PublicLoginIndexRouteImport } from './routes/_public/login/index'
import { Route as PublicForgotPassIndexRouteImport } from './routes/_public/forgot-pass/index'
import { Route as PublicForbiddenIndexRouteImport } from './routes/_public/forbidden/index'
import { Route as AuthTestAuthIndexRouteImport } from './routes/_auth/test-auth/index'
import { Route as AuthTeacherSubmissionIndexRouteImport } from './routes/_auth/teacher-submission/index'
import { Route as AuthTeacherGradeIndexRouteImport } from './routes/_auth/teacher-grade/index'
import { Route as AuthSubmitlabIndexRouteImport } from './routes/_auth/submitlab/index'
import { Route as AuthStudentManageIndexRouteImport } from './routes/_auth/student-manage/index'
import { Route as AuthStudentAssignmentIndexRouteImport } from './routes/_auth/student-assignment/index'
import { Route as AuthSemesterManagementIndexRouteImport } from './routes/_auth/semester-management/index'
import { Route as AuthMySubmitIndexRouteImport } from './routes/_auth/my-submit/index'
import { Route as AuthManageAccountIndexRouteImport } from './routes/_auth/manage-account/index'
import { Route as AuthLocRankingIndexRouteImport } from './routes/_auth/loc-ranking/index'
import { Route as AuthHomeIndexRouteImport } from './routes/_auth/home/index'
import { Route as AuthFapSyncIndexRouteImport } from './routes/_auth/fap-sync/index'
import { Route as AuthClassManageIndexRouteImport } from './routes/_auth/class-manage/index'
import { Route as AuthAssignmentStatisticIndexRouteImport } from './routes/_auth/assignment-statistic/index'
import { Route as AuthAssignmentManageIndexRouteImport } from './routes/_auth/assignment-manage/index'
import { Route as AuthAssignmentBankIndexRouteImport } from './routes/_auth/assignment-bank/index'
import { Route as AuthAcademicOutcomeReportIndexRouteImport } from './routes/_auth/academic-outcome-report/index'
import { Route as AuthAboutIndexRouteImport } from './routes/_auth/about/index'
import { Route as AuthTeacherAssignmentClassIdIndexRouteImport } from './routes/_auth/teacher-assignment/$classId/index'
import { Route as AuthStudentAssignmentAssignmentIdIndexRouteImport } from './routes/_auth/student-assignment/$assignmentId/index'
import { Route as AuthDashboardTeacherIndexRouteImport } from './routes/_auth/dashboard/teacher/index'
import { Route as AuthDashboardStudentIndexRouteImport } from './routes/_auth/dashboard/student/index'
import { Route as AuthDashboardHeadSubjectIndexRouteImport } from './routes/_auth/dashboard/head-subject/index'
import { Route as AuthDashboardAdminIndexRouteImport } from './routes/_auth/dashboard/admin/index'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicTestIndexRoute = PublicTestIndexRouteImport.update({
  id: '/test/',
  path: '/test/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicNotFoundIndexRoute = PublicNotFoundIndexRouteImport.update({
  id: '/not-found/',
  path: '/not-found/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicLoginIndexRoute = PublicLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicForgotPassIndexRoute = PublicForgotPassIndexRouteImport.update({
  id: '/forgot-pass/',
  path: '/forgot-pass/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicForbiddenIndexRoute = PublicForbiddenIndexRouteImport.update({
  id: '/forbidden/',
  path: '/forbidden/',
  getParentRoute: () => PublicRoute,
} as any)
const AuthTestAuthIndexRoute = AuthTestAuthIndexRouteImport.update({
  id: '/test-auth/',
  path: '/test-auth/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthTeacherSubmissionIndexRoute =
  AuthTeacherSubmissionIndexRouteImport.update({
    id: '/teacher-submission/',
    path: '/teacher-submission/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthTeacherGradeIndexRoute = AuthTeacherGradeIndexRouteImport.update({
  id: '/teacher-grade/',
  path: '/teacher-grade/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSubmitlabIndexRoute = AuthSubmitlabIndexRouteImport.update({
  id: '/submitlab/',
  path: '/submitlab/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthStudentManageIndexRoute = AuthStudentManageIndexRouteImport.update({
  id: '/student-manage/',
  path: '/student-manage/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthStudentAssignmentIndexRoute =
  AuthStudentAssignmentIndexRouteImport.update({
    id: '/student-assignment/',
    path: '/student-assignment/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthSemesterManagementIndexRoute =
  AuthSemesterManagementIndexRouteImport.update({
    id: '/semester-management/',
    path: '/semester-management/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthMySubmitIndexRoute = AuthMySubmitIndexRouteImport.update({
  id: '/my-submit/',
  path: '/my-submit/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthManageAccountIndexRoute = AuthManageAccountIndexRouteImport.update({
  id: '/manage-account/',
  path: '/manage-account/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLocRankingIndexRoute = AuthLocRankingIndexRouteImport.update({
  id: '/loc-ranking/',
  path: '/loc-ranking/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthHomeIndexRoute = AuthHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthFapSyncIndexRoute = AuthFapSyncIndexRouteImport.update({
  id: '/fap-sync/',
  path: '/fap-sync/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthClassManageIndexRoute = AuthClassManageIndexRouteImport.update({
  id: '/class-manage/',
  path: '/class-manage/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAssignmentStatisticIndexRoute =
  AuthAssignmentStatisticIndexRouteImport.update({
    id: '/assignment-statistic/',
    path: '/assignment-statistic/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthAssignmentManageIndexRoute =
  AuthAssignmentManageIndexRouteImport.update({
    id: '/assignment-manage/',
    path: '/assignment-manage/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthAssignmentBankIndexRoute = AuthAssignmentBankIndexRouteImport.update({
  id: '/assignment-bank/',
  path: '/assignment-bank/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAcademicOutcomeReportIndexRoute =
  AuthAcademicOutcomeReportIndexRouteImport.update({
    id: '/academic-outcome-report/',
    path: '/academic-outcome-report/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthAboutIndexRoute = AuthAboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthTeacherAssignmentClassIdIndexRoute =
  AuthTeacherAssignmentClassIdIndexRouteImport.update({
    id: '/teacher-assignment/$classId/',
    path: '/teacher-assignment/$classId/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthStudentAssignmentAssignmentIdIndexRoute =
  AuthStudentAssignmentAssignmentIdIndexRouteImport.update({
    id: '/student-assignment/$assignmentId/',
    path: '/student-assignment/$assignmentId/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthDashboardTeacherIndexRoute =
  AuthDashboardTeacherIndexRouteImport.update({
    id: '/dashboard/teacher/',
    path: '/dashboard/teacher/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthDashboardStudentIndexRoute =
  AuthDashboardStudentIndexRouteImport.update({
    id: '/dashboard/student/',
    path: '/dashboard/student/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthDashboardHeadSubjectIndexRoute =
  AuthDashboardHeadSubjectIndexRouteImport.update({
    id: '/dashboard/head-subject/',
    path: '/dashboard/head-subject/',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthDashboardAdminIndexRoute = AuthDashboardAdminIndexRouteImport.update({
  id: '/dashboard/admin/',
  path: '/dashboard/admin/',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AuthAboutIndexRoute
  '/academic-outcome-report': typeof AuthAcademicOutcomeReportIndexRoute
  '/assignment-bank': typeof AuthAssignmentBankIndexRoute
  '/assignment-manage': typeof AuthAssignmentManageIndexRoute
  '/assignment-statistic': typeof AuthAssignmentStatisticIndexRoute
  '/class-manage': typeof AuthClassManageIndexRoute
  '/fap-sync': typeof AuthFapSyncIndexRoute
  '/home': typeof AuthHomeIndexRoute
  '/loc-ranking': typeof AuthLocRankingIndexRoute
  '/manage-account': typeof AuthManageAccountIndexRoute
  '/my-submit': typeof AuthMySubmitIndexRoute
  '/semester-management': typeof AuthSemesterManagementIndexRoute
  '/student-assignment': typeof AuthStudentAssignmentIndexRoute
  '/student-manage': typeof AuthStudentManageIndexRoute
  '/submitlab': typeof AuthSubmitlabIndexRoute
  '/teacher-grade': typeof AuthTeacherGradeIndexRoute
  '/teacher-submission': typeof AuthTeacherSubmissionIndexRoute
  '/test-auth': typeof AuthTestAuthIndexRoute
  '/forbidden': typeof PublicForbiddenIndexRoute
  '/forgot-pass': typeof PublicForgotPassIndexRoute
  '/login': typeof PublicLoginIndexRoute
  '/not-found': typeof PublicNotFoundIndexRoute
  '/test': typeof PublicTestIndexRoute
  '/dashboard/admin': typeof AuthDashboardAdminIndexRoute
  '/dashboard/head-subject': typeof AuthDashboardHeadSubjectIndexRoute
  '/dashboard/student': typeof AuthDashboardStudentIndexRoute
  '/dashboard/teacher': typeof AuthDashboardTeacherIndexRoute
  '/student-assignment/$assignmentId': typeof AuthStudentAssignmentAssignmentIdIndexRoute
  '/teacher-assignment/$classId': typeof AuthTeacherAssignmentClassIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AuthAboutIndexRoute
  '/academic-outcome-report': typeof AuthAcademicOutcomeReportIndexRoute
  '/assignment-bank': typeof AuthAssignmentBankIndexRoute
  '/assignment-manage': typeof AuthAssignmentManageIndexRoute
  '/assignment-statistic': typeof AuthAssignmentStatisticIndexRoute
  '/class-manage': typeof AuthClassManageIndexRoute
  '/fap-sync': typeof AuthFapSyncIndexRoute
  '/home': typeof AuthHomeIndexRoute
  '/loc-ranking': typeof AuthLocRankingIndexRoute
  '/manage-account': typeof AuthManageAccountIndexRoute
  '/my-submit': typeof AuthMySubmitIndexRoute
  '/semester-management': typeof AuthSemesterManagementIndexRoute
  '/student-assignment': typeof AuthStudentAssignmentIndexRoute
  '/student-manage': typeof AuthStudentManageIndexRoute
  '/submitlab': typeof AuthSubmitlabIndexRoute
  '/teacher-grade': typeof AuthTeacherGradeIndexRoute
  '/teacher-submission': typeof AuthTeacherSubmissionIndexRoute
  '/test-auth': typeof AuthTestAuthIndexRoute
  '/forbidden': typeof PublicForbiddenIndexRoute
  '/forgot-pass': typeof PublicForgotPassIndexRoute
  '/login': typeof PublicLoginIndexRoute
  '/not-found': typeof PublicNotFoundIndexRoute
  '/test': typeof PublicTestIndexRoute
  '/dashboard/admin': typeof AuthDashboardAdminIndexRoute
  '/dashboard/head-subject': typeof AuthDashboardHeadSubjectIndexRoute
  '/dashboard/student': typeof AuthDashboardStudentIndexRoute
  '/dashboard/teacher': typeof AuthDashboardTeacherIndexRoute
  '/student-assignment/$assignmentId': typeof AuthStudentAssignmentAssignmentIdIndexRoute
  '/teacher-assignment/$classId': typeof AuthTeacherAssignmentClassIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_auth/about/': typeof AuthAboutIndexRoute
  '/_auth/academic-outcome-report/': typeof AuthAcademicOutcomeReportIndexRoute
  '/_auth/assignment-bank/': typeof AuthAssignmentBankIndexRoute
  '/_auth/assignment-manage/': typeof AuthAssignmentManageIndexRoute
  '/_auth/assignment-statistic/': typeof AuthAssignmentStatisticIndexRoute
  '/_auth/class-manage/': typeof AuthClassManageIndexRoute
  '/_auth/fap-sync/': typeof AuthFapSyncIndexRoute
  '/_auth/home/': typeof AuthHomeIndexRoute
  '/_auth/loc-ranking/': typeof AuthLocRankingIndexRoute
  '/_auth/manage-account/': typeof AuthManageAccountIndexRoute
  '/_auth/my-submit/': typeof AuthMySubmitIndexRoute
  '/_auth/semester-management/': typeof AuthSemesterManagementIndexRoute
  '/_auth/student-assignment/': typeof AuthStudentAssignmentIndexRoute
  '/_auth/student-manage/': typeof AuthStudentManageIndexRoute
  '/_auth/submitlab/': typeof AuthSubmitlabIndexRoute
  '/_auth/teacher-grade/': typeof AuthTeacherGradeIndexRoute
  '/_auth/teacher-submission/': typeof AuthTeacherSubmissionIndexRoute
  '/_auth/test-auth/': typeof AuthTestAuthIndexRoute
  '/_public/forbidden/': typeof PublicForbiddenIndexRoute
  '/_public/forgot-pass/': typeof PublicForgotPassIndexRoute
  '/_public/login/': typeof PublicLoginIndexRoute
  '/_public/not-found/': typeof PublicNotFoundIndexRoute
  '/_public/test/': typeof PublicTestIndexRoute
  '/_auth/dashboard/admin/': typeof AuthDashboardAdminIndexRoute
  '/_auth/dashboard/head-subject/': typeof AuthDashboardHeadSubjectIndexRoute
  '/_auth/dashboard/student/': typeof AuthDashboardStudentIndexRoute
  '/_auth/dashboard/teacher/': typeof AuthDashboardTeacherIndexRoute
  '/_auth/student-assignment/$assignmentId/': typeof AuthStudentAssignmentAssignmentIdIndexRoute
  '/_auth/teacher-assignment/$classId/': typeof AuthTeacherAssignmentClassIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/academic-outcome-report'
    | '/assignment-bank'
    | '/assignment-manage'
    | '/assignment-statistic'
    | '/class-manage'
    | '/fap-sync'
    | '/home'
    | '/loc-ranking'
    | '/manage-account'
    | '/my-submit'
    | '/semester-management'
    | '/student-assignment'
    | '/student-manage'
    | '/submitlab'
    | '/teacher-grade'
    | '/teacher-submission'
    | '/test-auth'
    | '/forbidden'
    | '/forgot-pass'
    | '/login'
    | '/not-found'
    | '/test'
    | '/dashboard/admin'
    | '/dashboard/head-subject'
    | '/dashboard/student'
    | '/dashboard/teacher'
    | '/student-assignment/$assignmentId'
    | '/teacher-assignment/$classId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/academic-outcome-report'
    | '/assignment-bank'
    | '/assignment-manage'
    | '/assignment-statistic'
    | '/class-manage'
    | '/fap-sync'
    | '/home'
    | '/loc-ranking'
    | '/manage-account'
    | '/my-submit'
    | '/semester-management'
    | '/student-assignment'
    | '/student-manage'
    | '/submitlab'
    | '/teacher-grade'
    | '/teacher-submission'
    | '/test-auth'
    | '/forbidden'
    | '/forgot-pass'
    | '/login'
    | '/not-found'
    | '/test'
    | '/dashboard/admin'
    | '/dashboard/head-subject'
    | '/dashboard/student'
    | '/dashboard/teacher'
    | '/student-assignment/$assignmentId'
    | '/teacher-assignment/$classId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_public'
    | '/_auth/about/'
    | '/_auth/academic-outcome-report/'
    | '/_auth/assignment-bank/'
    | '/_auth/assignment-manage/'
    | '/_auth/assignment-statistic/'
    | '/_auth/class-manage/'
    | '/_auth/fap-sync/'
    | '/_auth/home/'
    | '/_auth/loc-ranking/'
    | '/_auth/manage-account/'
    | '/_auth/my-submit/'
    | '/_auth/semester-management/'
    | '/_auth/student-assignment/'
    | '/_auth/student-manage/'
    | '/_auth/submitlab/'
    | '/_auth/teacher-grade/'
    | '/_auth/teacher-submission/'
    | '/_auth/test-auth/'
    | '/_public/forbidden/'
    | '/_public/forgot-pass/'
    | '/_public/login/'
    | '/_public/not-found/'
    | '/_public/test/'
    | '/_auth/dashboard/admin/'
    | '/_auth/dashboard/head-subject/'
    | '/_auth/dashboard/student/'
    | '/_auth/dashboard/teacher/'
    | '/_auth/student-assignment/$assignmentId/'
    | '/_auth/teacher-assignment/$classId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/test/': {
      id: '/_public/test/'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof PublicTestIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/not-found/': {
      id: '/_public/not-found/'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof PublicNotFoundIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/login/': {
      id: '/_public/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/forgot-pass/': {
      id: '/_public/forgot-pass/'
      path: '/forgot-pass'
      fullPath: '/forgot-pass'
      preLoaderRoute: typeof PublicForgotPassIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/forbidden/': {
      id: '/_public/forbidden/'
      path: '/forbidden'
      fullPath: '/forbidden'
      preLoaderRoute: typeof PublicForbiddenIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_auth/test-auth/': {
      id: '/_auth/test-auth/'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof AuthTestAuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/teacher-submission/': {
      id: '/_auth/teacher-submission/'
      path: '/teacher-submission'
      fullPath: '/teacher-submission'
      preLoaderRoute: typeof AuthTeacherSubmissionIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/teacher-grade/': {
      id: '/_auth/teacher-grade/'
      path: '/teacher-grade'
      fullPath: '/teacher-grade'
      preLoaderRoute: typeof AuthTeacherGradeIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/submitlab/': {
      id: '/_auth/submitlab/'
      path: '/submitlab'
      fullPath: '/submitlab'
      preLoaderRoute: typeof AuthSubmitlabIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/student-manage/': {
      id: '/_auth/student-manage/'
      path: '/student-manage'
      fullPath: '/student-manage'
      preLoaderRoute: typeof AuthStudentManageIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/student-assignment/': {
      id: '/_auth/student-assignment/'
      path: '/student-assignment'
      fullPath: '/student-assignment'
      preLoaderRoute: typeof AuthStudentAssignmentIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/semester-management/': {
      id: '/_auth/semester-management/'
      path: '/semester-management'
      fullPath: '/semester-management'
      preLoaderRoute: typeof AuthSemesterManagementIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/my-submit/': {
      id: '/_auth/my-submit/'
      path: '/my-submit'
      fullPath: '/my-submit'
      preLoaderRoute: typeof AuthMySubmitIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/manage-account/': {
      id: '/_auth/manage-account/'
      path: '/manage-account'
      fullPath: '/manage-account'
      preLoaderRoute: typeof AuthManageAccountIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/loc-ranking/': {
      id: '/_auth/loc-ranking/'
      path: '/loc-ranking'
      fullPath: '/loc-ranking'
      preLoaderRoute: typeof AuthLocRankingIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/home/': {
      id: '/_auth/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/fap-sync/': {
      id: '/_auth/fap-sync/'
      path: '/fap-sync'
      fullPath: '/fap-sync'
      preLoaderRoute: typeof AuthFapSyncIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/class-manage/': {
      id: '/_auth/class-manage/'
      path: '/class-manage'
      fullPath: '/class-manage'
      preLoaderRoute: typeof AuthClassManageIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/assignment-statistic/': {
      id: '/_auth/assignment-statistic/'
      path: '/assignment-statistic'
      fullPath: '/assignment-statistic'
      preLoaderRoute: typeof AuthAssignmentStatisticIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/assignment-manage/': {
      id: '/_auth/assignment-manage/'
      path: '/assignment-manage'
      fullPath: '/assignment-manage'
      preLoaderRoute: typeof AuthAssignmentManageIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/assignment-bank/': {
      id: '/_auth/assignment-bank/'
      path: '/assignment-bank'
      fullPath: '/assignment-bank'
      preLoaderRoute: typeof AuthAssignmentBankIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/academic-outcome-report/': {
      id: '/_auth/academic-outcome-report/'
      path: '/academic-outcome-report'
      fullPath: '/academic-outcome-report'
      preLoaderRoute: typeof AuthAcademicOutcomeReportIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/': {
      id: '/_auth/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/teacher-assignment/$classId/': {
      id: '/_auth/teacher-assignment/$classId/'
      path: '/teacher-assignment/$classId'
      fullPath: '/teacher-assignment/$classId'
      preLoaderRoute: typeof AuthTeacherAssignmentClassIdIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/student-assignment/$assignmentId/': {
      id: '/_auth/student-assignment/$assignmentId/'
      path: '/student-assignment/$assignmentId'
      fullPath: '/student-assignment/$assignmentId'
      preLoaderRoute: typeof AuthStudentAssignmentAssignmentIdIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/teacher/': {
      id: '/_auth/dashboard/teacher/'
      path: '/dashboard/teacher'
      fullPath: '/dashboard/teacher'
      preLoaderRoute: typeof AuthDashboardTeacherIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/student/': {
      id: '/_auth/dashboard/student/'
      path: '/dashboard/student'
      fullPath: '/dashboard/student'
      preLoaderRoute: typeof AuthDashboardStudentIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/head-subject/': {
      id: '/_auth/dashboard/head-subject/'
      path: '/dashboard/head-subject'
      fullPath: '/dashboard/head-subject'
      preLoaderRoute: typeof AuthDashboardHeadSubjectIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/admin/': {
      id: '/_auth/dashboard/admin/'
      path: '/dashboard/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof AuthDashboardAdminIndexRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAboutIndexRoute: typeof AuthAboutIndexRoute
  AuthAcademicOutcomeReportIndexRoute: typeof AuthAcademicOutcomeReportIndexRoute
  AuthAssignmentBankIndexRoute: typeof AuthAssignmentBankIndexRoute
  AuthAssignmentManageIndexRoute: typeof AuthAssignmentManageIndexRoute
  AuthAssignmentStatisticIndexRoute: typeof AuthAssignmentStatisticIndexRoute
  AuthClassManageIndexRoute: typeof AuthClassManageIndexRoute
  AuthFapSyncIndexRoute: typeof AuthFapSyncIndexRoute
  AuthHomeIndexRoute: typeof AuthHomeIndexRoute
  AuthLocRankingIndexRoute: typeof AuthLocRankingIndexRoute
  AuthManageAccountIndexRoute: typeof AuthManageAccountIndexRoute
  AuthMySubmitIndexRoute: typeof AuthMySubmitIndexRoute
  AuthSemesterManagementIndexRoute: typeof AuthSemesterManagementIndexRoute
  AuthStudentAssignmentIndexRoute: typeof AuthStudentAssignmentIndexRoute
  AuthStudentManageIndexRoute: typeof AuthStudentManageIndexRoute
  AuthSubmitlabIndexRoute: typeof AuthSubmitlabIndexRoute
  AuthTeacherGradeIndexRoute: typeof AuthTeacherGradeIndexRoute
  AuthTeacherSubmissionIndexRoute: typeof AuthTeacherSubmissionIndexRoute
  AuthTestAuthIndexRoute: typeof AuthTestAuthIndexRoute
  AuthDashboardAdminIndexRoute: typeof AuthDashboardAdminIndexRoute
  AuthDashboardHeadSubjectIndexRoute: typeof AuthDashboardHeadSubjectIndexRoute
  AuthDashboardStudentIndexRoute: typeof AuthDashboardStudentIndexRoute
  AuthDashboardTeacherIndexRoute: typeof AuthDashboardTeacherIndexRoute
  AuthStudentAssignmentAssignmentIdIndexRoute: typeof AuthStudentAssignmentAssignmentIdIndexRoute
  AuthTeacherAssignmentClassIdIndexRoute: typeof AuthTeacherAssignmentClassIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAboutIndexRoute: AuthAboutIndexRoute,
  AuthAcademicOutcomeReportIndexRoute: AuthAcademicOutcomeReportIndexRoute,
  AuthAssignmentBankIndexRoute: AuthAssignmentBankIndexRoute,
  AuthAssignmentManageIndexRoute: AuthAssignmentManageIndexRoute,
  AuthAssignmentStatisticIndexRoute: AuthAssignmentStatisticIndexRoute,
  AuthClassManageIndexRoute: AuthClassManageIndexRoute,
  AuthFapSyncIndexRoute: AuthFapSyncIndexRoute,
  AuthHomeIndexRoute: AuthHomeIndexRoute,
  AuthLocRankingIndexRoute: AuthLocRankingIndexRoute,
  AuthManageAccountIndexRoute: AuthManageAccountIndexRoute,
  AuthMySubmitIndexRoute: AuthMySubmitIndexRoute,
  AuthSemesterManagementIndexRoute: AuthSemesterManagementIndexRoute,
  AuthStudentAssignmentIndexRoute: AuthStudentAssignmentIndexRoute,
  AuthStudentManageIndexRoute: AuthStudentManageIndexRoute,
  AuthSubmitlabIndexRoute: AuthSubmitlabIndexRoute,
  AuthTeacherGradeIndexRoute: AuthTeacherGradeIndexRoute,
  AuthTeacherSubmissionIndexRoute: AuthTeacherSubmissionIndexRoute,
  AuthTestAuthIndexRoute: AuthTestAuthIndexRoute,
  AuthDashboardAdminIndexRoute: AuthDashboardAdminIndexRoute,
  AuthDashboardHeadSubjectIndexRoute: AuthDashboardHeadSubjectIndexRoute,
  AuthDashboardStudentIndexRoute: AuthDashboardStudentIndexRoute,
  AuthDashboardTeacherIndexRoute: AuthDashboardTeacherIndexRoute,
  AuthStudentAssignmentAssignmentIdIndexRoute:
    AuthStudentAssignmentAssignmentIdIndexRoute,
  AuthTeacherAssignmentClassIdIndexRoute:
    AuthTeacherAssignmentClassIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PublicRouteChildren {
  PublicForbiddenIndexRoute: typeof PublicForbiddenIndexRoute
  PublicForgotPassIndexRoute: typeof PublicForgotPassIndexRoute
  PublicLoginIndexRoute: typeof PublicLoginIndexRoute
  PublicNotFoundIndexRoute: typeof PublicNotFoundIndexRoute
  PublicTestIndexRoute: typeof PublicTestIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicForbiddenIndexRoute: PublicForbiddenIndexRoute,
  PublicForgotPassIndexRoute: PublicForgotPassIndexRoute,
  PublicLoginIndexRoute: PublicLoginIndexRoute,
  PublicNotFoundIndexRoute: PublicNotFoundIndexRoute,
  PublicTestIndexRoute: PublicTestIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
